{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networkkit\/service\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networkkit\/service\/callservice(_:withcache:delegate:)","title":"func callService(URLRequest, withCache: Bool, delegate: (any URLSessionTaskDelegate)?) async throws -> (data: Data, response: URLResponse)","type":"method"},{"path":"\/documentation\/networkkit\/service\/callservice(_:withcache:errorprocessortype:delegate:)","title":"func callService<T>(URLRequest, withCache: Bool, errorProcessorType: T.Type, delegate: (any URLSessionTaskDelegate)?) async throws -> (Data, URLResponse)","type":"method"},{"path":"\/documentation\/networkkit\/service\/data(url:withcache:delegate:)","title":"func data(url: String, withCache: Bool, delegate: (any URLSessionTaskDelegate)?) async throws -> Data","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networkkit\/service\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/networkkit\/service\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/networkkit\/service\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/networkkit\/service\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/networkkit\/service","title":"Service","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networkkit\/servicetask\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networkkit\/servicetask\/callservice(_:withcache:delegate:)","title":"func callService(URLRequest, withCache: Bool, delegate: (any URLSessionTaskDelegate)?) async throws -> (data: Data, response: URLResponse)","type":"method"},{"path":"\/documentation\/networkkit\/servicetask\/cancelrequest()","title":"func cancelRequest()","type":"method"},{"path":"\/documentation\/networkkit\/servicetask\/data(url:withcache:delegate:)","title":"func data(url: String, withCache: Bool, delegate: (any URLSessionTaskDelegate)?) async throws -> Data","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networkkit\/servicetask\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/networkkit\/servicetask\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/networkkit\/servicetask\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/networkkit\/servicetask\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/networkkit\/servicetask","title":"ServiceTask","type":"class"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/networkkit\/networkerror\/anytodictionary(bodyobject:)","title":"case anyToDictionary(bodyObject: any Encodable & Sendable)","type":"case"},{"path":"\/documentation\/networkkit\/networkerror\/customerror(data:)","title":"case customError(data: Data)","type":"case"},{"path":"\/documentation\/networkkit\/networkerror\/emptydata","title":"case emptyData","type":"case"},{"path":"\/documentation\/networkkit\/networkerror\/error(urlresponse:)","title":"case error(urlResponse: HTTPURLResponse)","type":"case"},{"path":"\/documentation\/networkkit\/networkerror\/invalidfileformat","title":"case invalidFileFormat","type":"case"},{"path":"\/documentation\/networkkit\/networkerror\/responseerror(response:)","title":"case responseError(response: URLResponse?)","type":"case"},{"path":"\/documentation\/networkkit\/networkerror\/stringtodatafailure","title":"case stringToDataFailure","type":"case"},{"path":"\/documentation\/networkkit\/networkerror\/urlemptypath","title":"case urlEmptyPath","type":"case"},{"path":"\/documentation\/networkkit\/networkerror\/urlinitializer(string:)","title":"case urlInitializer(string: String)","type":"case"},{"path":"\/documentation\/networkkit\/networkerror\/urlnotfound","title":"case urlNotFound","type":"case"},{"path":"\/documentation\/networkkit\/networkerror\/urlwithoutfileextension","title":"case urlWithoutFileExtension","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networkkit\/networkerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/networkkit\/networkerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/networkkit\/networkerror","title":"NetworkError","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networkkit\/swift\/encodable\/dictionary","title":"var dictionary: Any","type":"property"}],"path":"\/documentation\/networkkit\/swift\/encodable","title":"Encodable","type":"extension"}],"path":"\/documentation\/networkkit\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/networkkit","title":"NetworkKit","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}